@Kopernicus:AFTER[KOPERNICUS]
{
	useOnDemand = true
	Body
	{
		name = Rahasia
		cacheFile = SpaceTurds/Cache/Rahasia.bin
		Template
		{
			name = Dres
			removeAllPQSMods = true
		}
		Debug
		{
			exportMesh = true
			update = true
			showSOI = false
		}
		Properties
		{
			description = 
			radius = 
			geeASL = 
			rotationPeriod = 
			rotates = true
			tidallyLocked = false
			initialRotation = 0
			isHomeWorld = false
			timeWarpAltitudeLimits = 0 1 2 3 4 5 6 7
			maxZoom = 
			ScienceValues
			{
				landedDataValue = 
				splashedDataValue = 
				flyingLowDataValue = 
				flyingHighDataValue = 
				inSpaceLowDataValue = 
				inSpaceHighDataValue = 
				recoveryValue = 
				flyingAltitudeThreshold = 
				spaceAltitudeThreshold = 
			}
			
//			biomeMap = SpaceTurds/PluginData/Rahasia_biome.png
//			Biomes
//			{
//				Biome
//				{
//					name = 
//					value = 
//					color = 
//				}
//			}
		}
		Orbit
		{
			referenceBody = Sun
			color = 
			inclination = 
			eccentricity = 
			semiMajorAxis = 
//			period = 
			longitudeOfAscendingNode = 
			argumentOfPeriapsis = 
			meanAnomalyAtEpoch = 
			epoch = 
		}
		ScaledVersion
		{
			type = Atmospheric
			fadeStart = 
			fadeEnd = 
			Material
			{
				texture = SpaceTurds/PluginData/Rahasia_color.png
				normals = SpaceTurds/PluginData/Rahasia_normal.png
				shininess = 
				specColor = 
				rimPower = 
				rimBlend = 
				Gradient
				{
					0.0 = 
					0.2 = 
					0.4 = 
					0.6 = 
					0.8 = 
					1.0 = 
				}
			}
		}
		PQS
		{
			fadeStart = 
			fadeEnd = 
			deactivateAltitude = 
			Mods
			{
				VertexHeightMap
				{
					map = SpaceTurds/PluginData/Rahasia_height.png
					offset = 
					deformity = 
					scaleDeformityByRadius = false
					order = 20
					enabled = true
				}
				VertexColorMap
				{
					map = SpaceTurds/PluginData/Rahasia_color.png
					order = 20
					enabled = true
				}
			}
		}
		Atmosphere
		{
			enabled = true
			oxygen = false
			altitude = 
			staticPressureASL = 
			AtmosphereFromGround
			{
				waveLength = 
				innerRadius = 
				outerRadius = 
				transformScale = 
			}
			
			pressureCurve
			{
				
			}
			pressureCurveIsNormalized = false
			temperatureSeaLevel = 
			temperatureCurve
			{
				
			}
			temperatureSunMultCurve
			{
				
			}
		}
	}
}